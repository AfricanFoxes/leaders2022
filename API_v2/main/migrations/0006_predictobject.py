# Generated by Django 4.1.3 on 2022-11-04 04:17

from django.db import migrations, models
import djgeojson.fields


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0005_alter_pobject_geometry_name_alter_pobject_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='type')),
                ('name', models.CharField(max_length=200)),
                ('geometry_name', models.CharField(blank=True, max_length=200, null=True)),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('distance_to_center', models.FloatField()),
                ('count_nearest_postamats', models.IntegerField()),
                ('count_nearest_postamats_2km', models.IntegerField()),
                ('count_nearest_pvz', models.IntegerField()),
                ('food_delivery', models.IntegerField()),
                ('digitalization', models.FloatField()),
                ('covering_postamats', models.IntegerField()),
                ('normalize_name', models.CharField(max_length=200)),
                ('okato', models.BigIntegerField()),
                ('count_nearest_metro', models.IntegerField()),
                ('count_nearest_ngpt', models.IntegerField()),
                ('level_working_region', models.IntegerField()),
                ('level_sleeping_region', models.IntegerField()),
                ('count_house_flat', models.IntegerField()),
                ('population_house_flat', models.IntegerField()),
                ('population_house_square', models.IntegerField()),
                ('population_house_living_square', models.IntegerField()),
                ('count_house_flat_400', models.IntegerField()),
                ('population_house_flat_400', models.IntegerField()),
                ('population_house_square_400', models.IntegerField()),
                ('population_house_living_square_400', models.IntegerField()),
                ('count_house_flat_200', models.IntegerField()),
                ('population_house_flat_200', models.IntegerField()),
                ('population_house_square_200', models.IntegerField()),
                ('population_house_living_square_200', models.IntegerField()),
                ('region_average_age', models.FloatField()),
                ('region_population', models.IntegerField()),
                ('average_salary', models.IntegerField()),
                ('average_employees', models.IntegerField()),
                ('prc_employees_small_businesses', models.FloatField()),
                ('count_small_enterprises', models.IntegerField()),
                ('investments', models.IntegerField()),
                ('price_metr_housing', models.IntegerField()),
                ('cost_apartment', models.IntegerField()),
                ('rating_ecology', models.IntegerField()),
                ('entertainment_infrastructure', models.IntegerField()),
                ('house_infrastructure_rating', models.IntegerField()),
                ('prc_xenophobic', models.FloatField()),
                ('area_per_human_region', models.FloatField()),
                ('population_density_region', models.FloatField()),
                ('population_region', models.IntegerField()),
                ('prc_people_higher_education', models.FloatField()),
                ('death_rate', models.FloatField()),
                ('total_fertility_rate', models.FloatField()),
                ('prc_children', models.FloatField()),
                ('budget_expenditures', models.IntegerField()),
                ('budget_revenues', models.IntegerField()),
                ('tf_predict', models.IntegerField()),
                ('gradient_predict', models.FloatField()),
                ('decis_predict', models.FloatField()),
                ('forest_predict', models.FloatField()),
                ('extra_predict', models.FloatField()),
                ('logler_predict', models.FloatField()),
                ('hist_gradient_predict', models.FloatField()),
                ('ensemble_predict', models.FloatField()),
                ('geometry', djgeojson.fields.PointField()),
            ],
        ),
    ]
